apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: logging
resources:
  - loki-bucket-secret-externalsecret.yaml
helmCharts:
- name: loki
  namespace: logging
  includeCRDs: false
  releaseName: logging
  version: 6.29.0
  repo: https://grafana.github.io/helm-charts
  valuesInline:
    loki:
      auth_enabled: false
      commonConfig:
        replication_factor: 1
      schemaConfig:
        configs:
          - from: 2024-04-01
            object_store: s3
            store: tsdb
            schema: v13
            index:
              prefix: index_
              period: 24h
      storage:
        type: 's3'
        bucketNames:
          chunks: loki
          ruler: loki
          admin: loki
        s3:
          s3: null
          s3ForcePathStyle: true
          insecure: true
          endpoint: http://minio.minio.svc.cluster.local:9000
          accessKeyId: loki-svcacct
          secretAccessKey: ${S3_LOKI_SECRET_ACCESS_KEY}
      server:
        grpc_server_max_recv_msg_size: 16777216
        grpc_server_max_send_msg_size: 16777216
      limits_config:
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 15m
        query_timeout: 300s
        volume_enabled: true
        ingestion_rate_mb: 100
        ingestion_burst_size_mb: 200
    deploymentMode: SingleBinary
    singleBinary:
      replicas: 1
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: S3_LOKI_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: loki-bucket-secret
              key: loki-bucket-secret
    backend:
      replicas: 0
    read:
      replicas: 0
    write:
      replicas: 0
    ingester:
      replicas: 0
    querier:
      replicas: 0
    queryFrontend:
      replicas: 0
    queryScheduler:
      replicas: 0
    distributor:
      replicas: 0
    compactor:
      replicas: 0
    indexGateway:
      replicas: 0
    bloomCompactor:
      replicas: 0
    bloomGateway:
      replicas: 0
    test:
      enabled: false
    lokiCanary:
      enabled: false
- name: vector
  namespace: logging
  includeCRDs: false
  releaseName: vector-aggregator
  version: 0.41.0
  repo: https://helm.vector.dev
  valuesInline:
    role: Stateless-Aggregator
    logLevel: info
    containerPorts:
      - name: api
        containerPort: 8686
        protocol: TCP
      - name: prom-exporter
        containerPort: 9090
        protocol: TCP
    customConfig:
      data_dir: /vector-data-dir
      expire_metrics_secs: 60
      sources:
        vector_metrics_source:
          type: internal_metrics
        vector_kubernetes_source:
          address: 0.0.0.0:6010
          type: vector
          version: "2"
        vector_syslog_tls_source: #syslog.igou.systems
          type: syslog
          address: "0.0.0.0:6514"
          mode: tcp
          tls:
            crt_file: /tls/tls.crt
            enabled: true
            key_file: /tls/tls.key
        vector_routeros_socket_source:
          type: socket
          address: "0.0.0.0:9000"
          mode: udp
        # vector_journal_source:
        #   address: 0.0.0.0:6000
        #   type: vector
        #   version: "2"
      transforms:
        kubernetes_container_logs:
          type: remap
          inputs:
            - vector_kubernetes_source
          source: |
            .message = .message
            .container = .kubernetes.container_name
            .pod = .kubernetes.pod_name
            .namespace = .kubernetes.pod_namespace
            .source_type = "k8s_internal"
            .service_name = .kubernetes.pod_labels."app.kubernetes.io/name"
        routeros_logs:
          type: remap
          inputs:
            - vector_routeros_socket_source
          source: |
            . |= parse_cef!(.message)
            .source_type = "RouterOS"
            .topics = del(.name)
            del(.port)
            del(.host)
            .message = del(.msg)
        syslog_logs:
          type: remap
          inputs:
            - vector_syslog_tls_source
          source: . |= parse_syslog!(.message)
      sinks:
        vector_metrics_sink:
          type: prometheus_exporter
          inputs:
            - vector_metrics_source
          address: 0.0.0.0:9090
        loki_kubernetes_sink:
          type: loki
          inputs:
            - kubernetes_container_logs
          endpoint: http://logging-loki-gateway:80
          encoding:
            codec: logfmt
          labels:
            source: >-
              {{`{{ source_type }}`}}
            namespace: >-
              {{`{{ namespace }}`}}
            pod: >-
              {{`{{ pod }}`}}
            service_name: >-
              {{`{{ service_name }}`}}
        loki_routeros_sink:
          type: loki
          inputs:
            - routeros_logs
          endpoint: http://logging-loki-gateway:80
          encoding:
            codec: logfmt
          labels:
            source: >-
              {{`{{ source_type }}`}}
            service_name: "routeros"
            device: >-
              {{`{{ deviceProduct }}`}}
            host: >-
              {{`{{ dvchost }}`}}
        loki_syslog_sink:
          type: loki
          inputs:
            - syslog_logs
          endpoint: http://logging-loki-gateway:80
          encoding:
            codec: logfmt
          labels:
            source: "syslog-tls"
            service_name: "syslog"
    podMonitor:
      enabled: true
    service:
      enabled: true
      type: LoadBalancer
      loadBalancerIP: 10.10.9.16
    extraVolumes:
      - name: syslog-tls
        secret:
          secretName: syslog.igou.systems-tls
    extraVolumeMounts:
      - name: syslog-tls
        mountPath: /tls
- name: vector
  namespace: logging
  includeCRDs: false
  releaseName: vector-agent
  version: 0.41.0
  repo: https://helm.vector.dev
  valuesInline:
    role: Agent
    containerPorts:
      - name: prom-exporter
        containerPort: 9090
        protocol: TCP
    tolerations:
      - operator: Exists
    customConfig:
      data_dir: /vector-data-dir
      expire_metrics_secs: 60
      sources:
        # journal_logs:
        #   type: journald
        #   journal_directory: /var/log/journal
        kubernetes_logs:
          type: kubernetes_logs
          node_annotation_fields:
            node_labels: ""
        # host_metrics:
        #   type: host_metrics
        #   collectors:
        #     - cpu
        #     - memory
        #     - network
        #     - load
        #   namespace: host
        #   scrape_interval_secs: 15
        vector_metrics_source:
          type: internal_metrics
      sinks:
        # loki_journal_sink:
        #   type: vector
        #   inputs:
        #     - journal_logs
        #   address: vector-aggregator:6000
        #   version: "2"
        loki_kubernetes_sink:
          type: vector
          inputs:
            - kubernetes_logs
          address: vector-aggregator:6010
          version: "2"
        vector_metrics_sink:
          type: prometheus_exporter
          inputs:
            - vector_metrics_source
          address: 0.0.0.0:9090